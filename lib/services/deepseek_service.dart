import 'dart:convert';
import 'package:http/http.dart' as http;
import '../core/config/api_config.dart';
import 'pharmacy_service.dart';

class DeepSeekService {
  // Contexte du projet O'secours
  static const String _projectContext = '''
Vous √™tes l'assistant IA de l'application O'secours, une application mobile d'urgence en C√¥te d'Ivoire.

CONTEXTE DU PROJET:
- Application mobile d'urgence pour la C√¥te d'Ivoire
- Permet aux utilisateurs de signaler des urgences et d'obtenir de l'aide
- Fournit des informations sur les services d'urgence locaux
- G√©olocalise les h√¥pitaux, pharmacies et services d'urgence
- Permet de contacter rapidement les secours

FONCTIONNALIT√âS PRINCIPALES:
- Alertes d'urgence g√©olocalis√©es
- Contacts d'urgence (famille, amis, services)
- Localisation des h√¥pitaux et pharmacies
- Num√©ros d'urgence (Police: 170, SAMU: 185, Pompiers: 180)
- Conseils de premiers secours
- Assistance m√©dicale d'urgence

SERVICES DISPONIBLES:
- H√¥pitaux et cliniques
- Pharmacies de garde
- Services de police
- Pompiers
- SAMU (Service d'Aide M√©dicale Urgente)
- Ambulances

R√àGLES DE R√âPONSE:
1. R√©pondez UNIQUEMENT aux questions li√©es aux urgences, √† la sant√©, √† la s√©curit√© en C√¥te d'Ivoire
2. Donnez des informations pratiques et utiles
3. Encouragez √† appeler les services d'urgence si n√©cessaire
4. Restez dans le contexte de l'application O'secours
5. Ne r√©pondez pas aux questions sans rapport avec les urgences ou la sant√©
6. Utilisez un ton professionnel et rassurant

Si une question n'est pas li√©e aux urgences, √† la sant√© ou √† la s√©curit√©, r√©pondez poliment que vous ne pouvez aider que pour les urgences et questions de sant√©.
''';

  static Future<String> sendMessage(String userMessage) async {
    try {
      // Enrichir le message avec les donn√©es des pharmacies si demand√©
      String enrichedMessage = await _enrichMessageWithPharmacies(userMessage);

      final response = await http.post(
        Uri.parse(ApiConfig.deepseekBaseUrl),
        headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ${ApiConfig.deepseekApiKey}'},
        body: jsonEncode({
          'model': ApiConfig.deepseekModel,
          'messages': [
            {'role': 'system', 'content': _projectContext},
            {'role': 'user', 'content': enrichedMessage},
          ],
          'max_tokens': ApiConfig.maxTokens,
          'temperature': ApiConfig.temperature,
        }),
      );

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        return data['choices'][0]['message']['content'];
      } else {
        print('Erreur API DeepSeek: ${response.statusCode}');
        print('Response: ${response.body}');
        return _getFallbackResponse(userMessage);
      }
    } catch (e) {
      print('Erreur lors de l\'appel √† l\'API DeepSeek: $e');
      return _getFallbackResponse(userMessage);
    }
  }

  static Future<String> _enrichMessageWithPharmacies(String userMessage) async {
    String message = userMessage.toLowerCase();

    // V√©rifier si la question concerne les pharmacies
    if (message.contains('pharmacie') || message.contains('m√©dicament') || message.contains('medicament')) {
      try {
        final pharmacyService = PharmacyService();
        // Coordonn√©es d'Abidjan par d√©faut (latitude: 5.3600, longitude: -4.0083)
        final pharmacies = await pharmacyService.getNearbyPharmacies(5.3600, -4.0083);

        if (pharmacies.isNotEmpty) {
          String pharmacyData = '\n\nDonn√©es des pharmacies disponibles :\n';
          for (int i = 0; i < pharmacies.length && i < 5; i++) {
            final pharmacy = pharmacies[i];
            pharmacyData +=
                '- ${pharmacy['name'] ?? 'Nom inconnu'} (${pharmacy['address'] ?? 'Adresse inconnue'}) - ${pharmacy['distance']?.toStringAsFixed(1) ?? '0.0'} km\n';
          }

          return userMessage + pharmacyData;
        }
      } catch (e) {
        print('Erreur lors de la r√©cup√©ration des pharmacies: $e');
        // Continuer avec le message original si l'API des pharmacies √©choue
      }
    }

    return userMessage;
  }

  static String _getFallbackResponse(String userMessage) {
    String message = userMessage.toLowerCase();

    if (message.contains('h√¥pital') || message.contains('hopital')) {
      return "Voici les h√¥pitaux les plus proches de votre position :\n\nüè• CHU de Treichville - 2.3 km\nüè• H√¥pital G√©n√©ral de Bingerville - 4.1 km\nüè• Clinique Internationale Sainte Anne-Marie - 3.8 km\n\nSouhaitez-vous que je vous guide vers l'un d'eux ?";
    } else if (message.contains('pharmacie')) {
      return "Voici les pharmacies de garde les plus proches :\n\nüíä Pharmacie de la Paix - Ouverte 24h/24 - 1.2 km\nüíä Pharmacie du Plateau - Ouverte jusqu'√† 22h - 2.1 km\nüíä Pharmacie Nouvelle - Ouverte 24h/24 - 3.5 km\n\nVoulez-vous les coordonn√©es de l'une d'elles ?";
    } else if (message.contains('accident') && message.contains('voiture')) {
      return "En cas d'accident de voiture, voici les √©tapes √† suivre :\n\n1. üö® S√©curisez la zone et allumez vos feux de d√©tresse\n2. üìû Appelez les secours (185 ou 170)\n3. ü©π V√©rifiez s'il y a des bless√©s\n4. üìã √âtablissez un constat amiable si possible\n5. üì∏ Prenez des photos des d√©g√¢ts\n\nAvez-vous besoin d'aide pour contacter les secours ?";
    } else if (message.contains('urgence') || message.contains('secours')) {
      return "Pour une urgence, voici les num√©ros √† composer :\n\nüö® Police: 170\nüöë SAMU: 185\nüöí Pompiers: 180\n\nEn cas d'urgence vitale, n'h√©sitez pas √† appeler directement ces num√©ros.";
    } else {
      return "Je suis l'assistant O'secours, sp√©cialis√© dans les urgences et la sant√©. Je peux vous aider avec :\n\n‚Ä¢ Localiser les h√¥pitaux et pharmacies\n‚Ä¢ Donner des conseils d'urgence\n‚Ä¢ Fournir les num√©ros d'urgence\n‚Ä¢ Guider en cas d'accident\n\nQue puis-je faire pour vous aider ?";
    }
  }
}
